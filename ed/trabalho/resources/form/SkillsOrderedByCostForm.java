/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ed.trabalho.resources.form;

import ed.trabalho.adt.PersonEmailOrderedList;
import ed.trabalho.adt.PersonIdOrderedList;
import ed.trabalho.adt.SocialNetwork;
import ed.trabalho.helpers.Store;
import ed.trabalho.model.Person;
import ed.trabalho.model.Professional;
import estg.ed.array.DynamicArray;
import estg.ed.exceptions.ElementNotFoundException;
import estg.ed.exceptions.VertexIsNotAccessibleException;
import estg.ed.interfaces.DynamicArrayContract;
import estg.ed.interfaces.PriorityQueueADT;
import estg.ed.tree.binary.ArrayPriorityMinQueue;
import java.util.Iterator;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;

/**
 * Form to list people with desired skill ordered by minimum path cost from desired person.
 * @author igu
 */
public class SkillsOrderedByCostForm extends javax.swing.JFrame {

  /**
   * Stores with all application data.
   */
  private Store store;
  
  /**
   * Creates new form
   */
  public SkillsOrderedByCostForm() {
    initComponents();
  }
  
  /**
   * Set store access to component.
   * @param store 
   */
  public void setStore(Store store){
    this.store = store;
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    submitButton = new javax.swing.JButton();
    inputSkill = new javax.swing.JTextField();
    jLabel1 = new javax.swing.JLabel();
    jLabel3 = new javax.swing.JLabel();
    jLabel4 = new javax.swing.JLabel();
    labelPersonId2 = new javax.swing.JLabel();
    labelPersonId3 = new javax.swing.JLabel();
    inputUserEmail = new javax.swing.JTextField();
    inputUserID = new javax.swing.JTextField();

    submitButton.setText("Search");
    submitButton.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        submitButtonActionPerformed(evt);
      }
    });

    inputSkill.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        inputSkillActionPerformed(evt);
      }
    });

    jLabel1.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jLabel1.setText("Skill");

    jLabel3.setFont(new java.awt.Font("Tahoma", 1, 16)); // NOI18N
    jLabel3.setText("User");

    jLabel4.setFont(new java.awt.Font("Tahoma", 2, 16)); // NOI18N
    jLabel4.setText("(ID ou email)");

    labelPersonId2.setText("ID");

    labelPersonId3.setText("Email");

    inputUserEmail.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        inputUserEmailActionPerformed(evt);
      }
    });

    inputUserID.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        inputUserIDActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(layout.createSequentialGroup()
            .addGap(59, 59, 59)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(27, 27, 27)
                .addComponent(jLabel4))
              .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(layout.createSequentialGroup()
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelPersonId2)
                    .addComponent(labelPersonId3))
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inputUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputUserID, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createSequentialGroup()
                  .addComponent(jLabel1)
                  .addGap(33, 33, 33)
                  .addComponent(inputSkill, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)))))
          .addGroup(layout.createSequentialGroup()
            .addGap(169, 169, 169)
            .addComponent(submitButton)))
        .addContainerGap(141, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addGap(19, 19, 19)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(inputSkill, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(32, 32, 32)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
          .addGroup(layout.createSequentialGroup()
            .addComponent(labelPersonId2)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(labelPersonId3))
          .addGroup(layout.createSequentialGroup()
            .addComponent(inputUserID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(inputUserEmail, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
        .addComponent(submitButton)
        .addContainerGap())
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void submitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitButtonActionPerformed
    //Can use only one of input per person (ID OR Email)
    if(inputUserID.getText().isEmpty() && inputUserEmail.getText().isEmpty()){
      JOptionPane.showMessageDialog(null, "Need to insert user email or ID.");
      return;
    }
    else if(!inputUserID.getText().isEmpty() && !inputUserEmail.getText().isEmpty()){
      JOptionPane.showMessageDialog(null, "Need to inser user email or ID, not both.");
      return;
    }
    else if(inputSkill.getText().isEmpty()){
      JOptionPane.showMessageDialog(null, "Need to insert skill name.");
      return;
    }
    
    //Search user
    Person user;
    
    try{
      //By id
      if(!inputUserID.getText().isEmpty()){
        int id = Integer.parseInt(inputUserID.getText());
        user = ((PersonIdOrderedList) this.store.getPeopleById()).searchById(id);
      }
      
      //By email
      else {
        String email = inputUserEmail.getText();
        user = ((PersonEmailOrderedList) this.store.getPeopleByEmail()).searchByEmail(email);
      }
    }
    catch(ElementNotFoundException e){
      JOptionPane.showMessageDialog(null, "User was not found.");
      return;
    }
    
    try {
      //Skill
      String skill = inputSkill.getText();      
      
      //Get spawning tree of user
      SocialNetwork resultGraph = (SocialNetwork) this.store.getNetwork().mstNetwork(user);
      
      //Create result in PriorityQueue
      PriorityQueueADT<Person> resultQueue = new ArrayPriorityMinQueue<>();

      //Iterate in user list
      Iterator it = resultGraph.iteratorBFS(user);
      
      //Check user has skill
      Person first = (Person) it.next();
      if(first.hasSkill(skill))
        resultQueue.enqueue(first, 0);
      
      while(it.hasNext()){
        Person p = (Person) it.next();
        
        if(p.hasSkill(skill)){
          double cost = resultGraph.shortestPathWeight(user, p);
          resultQueue.enqueue(p, cost);
        }
      }
      
      JOptionPane.showMessageDialog(null, resultQueue.toString());
    }
    catch (ElementNotFoundException | VertexIsNotAccessibleException ex) {
      JOptionPane.showMessageDialog(null, "There was an error processing the action.");
    }
  }//GEN-LAST:event_submitButtonActionPerformed

  private void inputUserEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUserEmailActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_inputUserEmailActionPerformed

  private void inputUserIDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputUserIDActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_inputUserIDActionPerformed

  private void inputSkillActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inputSkillActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_inputSkillActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(SkillsOrderedByCostForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(SkillsOrderedByCostForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(SkillsOrderedByCostForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(SkillsOrderedByCostForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new SkillsOrderedByCostForm().setVisible(false);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextField inputSkill;
  private javax.swing.JTextField inputUserEmail;
  private javax.swing.JTextField inputUserID;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel labelPersonId2;
  private javax.swing.JLabel labelPersonId3;
  private javax.swing.JButton submitButton;
  // End of variables declaration//GEN-END:variables
}
