/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package ed.trabalho.resources.gui;

import ed.trabalho.adt.PersonEmailOrderedList;
import ed.trabalho.adt.PersonIdOrderedList;
import ed.trabalho.adt.ReverseNetwork;
import ed.trabalho.helpers.Data;
import ed.trabalho.helpers.Store;
import ed.trabalho.helpers.Viewer;
import ed.trabalho.json.Pessoa;
import ed.trabalho.resources.form.FindPersonByEmailForm;
import ed.trabalho.resources.form.FindPersonByIdForm;
import estg.ed.exceptions.ElementNotFoundException;
import estg.ed.exceptions.NotComparableException;
import java.io.File;
import java.io.IOException;
import javax.swing.JFileChooser;

/**
 * Menu for application using Swing.
 * @author igu
 */
public class JMenu extends javax.swing.JFrame { 
  /**
   * Store with all application data.
   */
  private Store store;
  
  /**
   * Creates new form JMenu
   */
  public JMenu() {
    initComponents();
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    fileChooser = new javax.swing.JFileChooser();
    jScrollPane1 = new javax.swing.JScrollPane();
    consoleTextArea = new javax.swing.JTextArea();
    jMenuBar1 = new javax.swing.JMenuBar();
    fileMenu = new javax.swing.JMenu();
    fileMenuOpenJson = new javax.swing.JMenuItem();
    fileMenuExit = new javax.swing.JMenuItem();
    viewMenu = new javax.swing.JMenu();
    viewMenuViewNetwork = new javax.swing.JMenuItem();
    searchMenu = new javax.swing.JMenu();
    searchMenuById = new javax.swing.JMenuItem();
    searchMenuByEmail = new javax.swing.JMenuItem();

    fileChooser.setDialogTitle("Choose a File");

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
    setTitle("Menu");

    consoleTextArea.setEditable(false);
    consoleTextArea.setColumns(20);
    consoleTextArea.setRows(5);
    jScrollPane1.setViewportView(consoleTextArea);

    fileMenu.setText("File");

    fileMenuOpenJson.setText("Open JSON");
    fileMenuOpenJson.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fileMenuOpenJsonActionPerformed(evt);
      }
    });
    fileMenu.add(fileMenuOpenJson);

    fileMenuExit.setText("Exit");
    fileMenuExit.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        fileMenuExitActionPerformed(evt);
      }
    });
    fileMenu.add(fileMenuExit);

    jMenuBar1.add(fileMenu);

    viewMenu.setText("View");

    viewMenuViewNetwork.setText("Network");
    viewMenuViewNetwork.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        viewMenuViewNetworkActionPerformed(evt);
      }
    });
    viewMenu.add(viewMenuViewNetwork);

    jMenuBar1.add(viewMenu);

    searchMenu.setText("Search");

    searchMenuById.setText("By ID");
    searchMenuById.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchMenuByIdActionPerformed(evt);
      }
    });
    searchMenu.add(searchMenuById);

    searchMenuByEmail.setText("By Email");
    searchMenuByEmail.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        searchMenuByEmailActionPerformed(evt);
      }
    });
    searchMenu.add(searchMenuByEmail);

    jMenuBar1.add(searchMenu);

    setJMenuBar(jMenuBar1);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 881, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addContainerGap(831, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 993, Short.MAX_VALUE)
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  /**
   * Open file chooser to select JSON input.
   * Stores converted JSON info on json attribute.
   * Construct the network after converting JSON.
   * @param evt 
   */
  private void fileMenuOpenJsonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuOpenJsonActionPerformed
    int returnVal = fileChooser.showOpenDialog(this);
    
    //Selected a file
    if(returnVal == JFileChooser.APPROVE_OPTION){
      File file = fileChooser.getSelectedFile();
      
      Pessoa[] data;
      
      //Get JSON data converted into java classes
      try {
        data = Data.readJson(file.getAbsolutePath());
      }
      catch(IOException ex){
        consoleTextArea.setText("Problem acessing file" + file.getAbsolutePath());
        return;
      }
      catch(Exception e){
        consoleTextArea.setText("Error loading file. Is it a valid JSON?");
        return;
      }
    
      //Instantiates the store with
      //Directional network (it is reverse, the best cost is from the more weighted edge
      //People list by id
      //People list by email
      this.store = new Store(new ReverseNetwork<>(), new PersonIdOrderedList(), new PersonEmailOrderedList());
      
      //Populate store with JSON data
      try {
        Data.populate(data, this.store);
        
      } catch (ElementNotFoundException | NotComparableException ex) {
        consoleTextArea.setText("Error populating network with provided data!");
        return;
      }

      //Success
      consoleTextArea.setText("Successfully imported JSON file and populated Network:\nPeople by id:\t" + this.store.getPeopleById().toString() + "\nPeople by email:\t" + this.store.getPeopleByEmail().toString());
    }
    //Cancelled file input
    else{
      consoleTextArea.setText("File access cancelled by user.");
    }
  }//GEN-LAST:event_fileMenuOpenJsonActionPerformed

  private void fileMenuExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fileMenuExitActionPerformed
    System.exit(0);
  }//GEN-LAST:event_fileMenuExitActionPerformed

  private void viewMenuViewNetworkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewMenuViewNetworkActionPerformed
    try{
      //Generate view
      Viewer viewer = new Viewer();
      viewer.create(this.store.getNetwork());
      viewer.showFrame();

      consoleTextArea.setText("Successfully created network view!");
    }
    catch(Exception e){
      consoleTextArea.setText("Error creating Network View!");
    }
  }//GEN-LAST:event_viewMenuViewNetworkActionPerformed

  private void searchMenuByIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuByIdActionPerformed
    FindPersonByIdForm form = new FindPersonByIdForm();
    form.setStore(this.store);
    form.pack();
    form.setVisible(true);
  }//GEN-LAST:event_searchMenuByIdActionPerformed

  private void searchMenuByEmailActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchMenuByEmailActionPerformed
    FindPersonByEmailForm form = new FindPersonByEmailForm();
    form.setStore(this.store);
    form.pack();
    form.setVisible(true);
  }//GEN-LAST:event_searchMenuByEmailActionPerformed

  /**
   * @param args the command line arguments
   */
  public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
      for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
        if ("Nimbus".equals(info.getName())) {
          javax.swing.UIManager.setLookAndFeel(info.getClassName());
          break;
        }
      }
    } catch (ClassNotFoundException ex) {
      java.util.logging.Logger.getLogger(JMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
      java.util.logging.Logger.getLogger(JMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
      java.util.logging.Logger.getLogger(JMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
      java.util.logging.Logger.getLogger(JMenu.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the form */
    java.awt.EventQueue.invokeLater(new Runnable() {
      public void run() {
        new JMenu().setVisible(true);
      }
    });
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JTextArea consoleTextArea;
  private javax.swing.JFileChooser fileChooser;
  private javax.swing.JMenu fileMenu;
  private javax.swing.JMenuItem fileMenuExit;
  private javax.swing.JMenuItem fileMenuOpenJson;
  private javax.swing.JMenuBar jMenuBar1;
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JMenu searchMenu;
  private javax.swing.JMenuItem searchMenuByEmail;
  private javax.swing.JMenuItem searchMenuById;
  private javax.swing.JMenu viewMenu;
  private javax.swing.JMenuItem viewMenuViewNetwork;
  // End of variables declaration//GEN-END:variables
}
